### Bad weather test for creating a bid (as a user) with invalid stickId
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 100,
  "stickId": 100
}

> {%
    client.test("User creates a bid with invalid stickId", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.id == null, "Bid created");
    });
%}

### Bad weather test for creating a bid (as a user) with invalid amount
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": -100,
  "stickId": 1
}

> {%
    client.test("User creates a bid with invalid amount", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.id == null, "Bid created");
    });
%}

### Bad weather test for creating a bid with amount less than starting bid
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 10,
  "stickId": 1
}

> {%
    client.test("User creates a bid with amount less than starting bid", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.id == null, "Bid created");
    });
%}

### Good weather test for creating a bid
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 100,
  "stickId": 1
}

> {%
    client.test("User creates a bid", function () {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Bad weather test for trying to overbid yourself
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 200,
  "stickId": 1
}

> {%
    client.test("User tries to overbid himself", function () {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Bad weather test for trying to put bid less than current bid as another user
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_2_token}}

{
  "amount": 50,
  "stickId": 1
}

> {%
    client.test("User tries to put bid less than current bid", function () {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Good weather test for overbiding another user
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_2_token}}

{
  "amount": 200,
  "stickId": 1
}

> {%
    client.test("User overbids another user", function () {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### Bad weather test for trying to put bid on ended auction
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 200,
  "stickId": 4
}

> {%
    client.test("User tries to put bid on ended auction", function () {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Bad weather test for trying to put bid on non-existing stick
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{user_1_token}}

{
  "amount": 200,
  "stickId": 100
}

> {%
    client.test("User tries to put bid on non-existing stick", function () {
        client.assert(response.status === 400, "Response status is not 400");
    });
%}

### Alter the token, to simulate scenario where token is invalid
@altered_token = {{user_1_token}}invalid

### Bad weather test for creating a bid with invalid token
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{altered_token}}

{
  "amount": 100,
  "stickId": 1
}

> {%
    client.test("User creates a bid with invalid token", function () {
        client.assert(response.status === 401, "Response status is not 401");
    });
%}

### Bad weather test for creating a bid with no token
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json

{
  "amount": 100,
  "stickId": 1
}

> {%
    client.test("User creates a bid with no token", function () {
        client.assert(response.status === 401, "Response status is not 401");
    });
%}

### Bad weather test for creating a bid with admin token
POST {{protocol}}//{{host}}:{{port}}/{{default_path}}/sticks/bids
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "amount": 100,
  "stickId": 1
}

> {%
    client.test("Admin creates a bid", function () {
        client.assert(response.status === 403, "Response status is not 403");
    });
%}